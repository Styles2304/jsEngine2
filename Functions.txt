To Do
====================
- Kill small velocities
- Define advanced bounding box

GAME (container, width, height, fps, debug)
	refresh() - clears the canvas
	addState(name, oneTime, doLoop) - Adds state to the game
	startState(state) - Starts the state and stops all others
	run() - Initiates the game

State (game, oneTime, doLoop)
	run() - Runs the state
	addWorld(width, height) - Adds a world to the state

World (game, width, height)
	debugDraw() - Draws a red line around the edge of the world for debugging purposes
	addEnt(name, x, y, width, height, physics) - Adds Entity to the world

Entity (game, world, x, y, width, height, physics, mass)
	applyForce(force) - Applies vector force to entity with physics enabled

Vector (x, y)
	Static Functions
		add(vector1, vector2)
		sub(vector1, vector2)
		mult(vector, scalar)
		div(vector, scalar)
		copy(vector)
		
	add(vector)
	sub(vector)
	mult(scalar)
	div(scalar)
	norm()
	getMag()
	magSq()
	setMag(magnitude)
	limit(max)
	copy()

/**
 * @property {Element}  STAGE       Canvas Element
 * @property {Element}  CONTAINER   Div or some other Container placed by the user to contain the STAGE
 * @property {Context}  CONTEXT     2d Context of the Canvas
 * @property {Number}   FPS         Animation frames called per second
 * @property {{}}       keys        Object containing Boolean data of the keyboard
 * @property {Boolean}  keys.enter  Enter
 * @property {Boolean}  keys.space  Spacebar
 * @property {Boolean}  keys.left   Left Arrow
 * @property {Boolean}  keys.up     Up Arrow
 * @property {Boolean}  keys.right  Right Arrow
 * @property {Boolean}  keys.down   Down Arrow
 * @property {Boolean}  keys.one    Number keys spelled out "one" - "zero"
 * @property {Boolean}  keys.a      Letter keys "A" - "Z"
 * @property {{}}       mouse       Object containing positional and Boolean button data of the mouse
 * @property {Vector}   mouse.pos   A Vector containing the current mouse position inside the canvas
 * @property {{}}       states      Object containing references to all States
 * @property {State}    curState    Reference to the currently selected State
 * @property {Boolean}  debug       Game debug
 */